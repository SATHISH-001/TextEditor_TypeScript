{"ast":null,"code":"var _jsxFileName = \"/home/sathish/my-app-typescript/src/App.tsx\";\n// import React, { useEffect, useRef, useState } from \"react\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface EditorContainerProps {}\n\n// const EditorContainer: React.FC<EditorContainerProps> = () => {\n//   const [editorState, setEditorState] = useState(\n//     EditorState.createWithContent(ContentState.createFromText(\"abcde\"))\n//   );\n//   const [editMode, setEditMode] = useState(true);\n//   const editorRef = useRef<Editor>(null);\n\n//   const focus = () => {\n//     if (editorRef.current) {\n//       editorRef.current.focusEditor();\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(\"edit Me\");\n//     if (editMode) {\n//       focus();\n//     }\n//   }, [editMode]);\n\n//   const toggleEditMode = () => {\n//     setEditMode(!editMode);\n//   };\n\n//   const onEditorStateChange = (newEditorState: EditorState) => {\n//     setEditorState(newEditorState);\n//   };\n\n//   return (\n//     <div className=\"editor\">\n//       <button onClick={toggleEditMode}>Toggle Edit Mode</button>\n//       <Editor\n//         editorState={editorState}\n//         onEditorStateChange={onEditorStateChange}\n//         ref={editorRef}\n//         readOnly={!editMode}\n//         toolbar={{\n//           image: {\n//             uploadCallback: uploadImageCallBack,\n//             alt: { present: true, mandatory: true }\n//           }\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const App: React.FC = () => (\n//   <div>\n//     <h2>Test with React Draft Wysiwyg.</h2>\n//     <EditorContainer />\n//   </div>\n// );\n\n// export default App;\n\nimport React, { Component } from \"react\";\nimport { EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// examples in https://github.com/jpuri/react-draft-wysiwyg/tree/master/stories\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\nclass EditorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.editorRef = void 0;\n    this.focus = () => {\n      let editor = this.editorRef.current;\n      if (editor) {\n        editor.focusEditor();\n      }\n    };\n    this.componentDidMount = () => {\n      console.log(\"edit Me\");\n      if (this.state.editMode) {\n        this.focus();\n      }\n    };\n    this.toggleEditMode = () => {\n      this.setState({\n        editMode: !this.state.editMode\n      });\n    };\n    this.onEditorStateChange = editorState => {\n      // console.log(editorState)\n      this.setState({\n        editorState\n      });\n    };\n    this.state = {\n      editorState: EditorState.createWithContent(ContentState.createFromText(\"abcde\")),\n      editMode: true\n    };\n    this.editorRef = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    const {\n      editorState,\n      editMode\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleEditMode,\n        children: \"Toggle Edit Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        onEditorStateChange: this.onEditorStateChange,\n        ref: this.editorRef,\n        readOnly: !editMode\n        // toolbarHidden={true}\n        ,\n        toolbar: {\n          // inline: { inDropdown: true },\n          // list: { inDropdown: true },\n          // textAlign: { inDropdown: true },\n          // link: { inDropdown: true },\n          // history: { inDropdown: true },\n          image: {\n            uploadCallback: uploadImageCallBack,\n            alt: {\n              present: true,\n              mandatory: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Test with React Draft Wysiwyg.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(EditorContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 184,\n  columnNumber: 5\n}, this);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","EditorState","ContentState","Editor","jsxDEV","_jsxDEV","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","EditorContainer","constructor","props","editorRef","focus","editor","current","focusEditor","componentDidMount","console","log","state","editMode","toggleEditMode","setState","onEditorStateChange","editorState","createWithContent","createFromText","createRef","render","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","readOnly","toolbar","image","uploadCallback","alt","present","mandatory","App","_c","$RefreshReg$"],"sources":["/home/sathish/my-app-typescript/src/App.tsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface EditorContainerProps {}\n\n// const EditorContainer: React.FC<EditorContainerProps> = () => {\n//   const [editorState, setEditorState] = useState(\n//     EditorState.createWithContent(ContentState.createFromText(\"abcde\"))\n//   );\n//   const [editMode, setEditMode] = useState(true);\n//   const editorRef = useRef<Editor>(null);\n\n//   const focus = () => {\n//     if (editorRef.current) {\n//       editorRef.current.focusEditor();\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(\"edit Me\");\n//     if (editMode) {\n//       focus();\n//     }\n//   }, [editMode]);\n\n//   const toggleEditMode = () => {\n//     setEditMode(!editMode);\n//   };\n\n//   const onEditorStateChange = (newEditorState: EditorState) => {\n//     setEditorState(newEditorState);\n//   };\n\n//   return (\n//     <div className=\"editor\">\n//       <button onClick={toggleEditMode}>Toggle Edit Mode</button>\n//       <Editor\n//         editorState={editorState}\n//         onEditorStateChange={onEditorStateChange}\n//         ref={editorRef}\n//         readOnly={!editMode}\n//         toolbar={{\n//           image: {\n//             uploadCallback: uploadImageCallBack,\n//             alt: { present: true, mandatory: true }\n//           }\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const App: React.FC = () => (\n//   <div>\n//     <h2>Test with React Draft Wysiwyg.</h2>\n//     <EditorContainer />\n//   </div>\n// );\n\n// export default App;\n\n\n\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// examples in https://github.com/jpuri/react-draft-wysiwyg/tree/master/stories\nfunction uploadImageCallBack(file: File) {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n        xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n        const data = new FormData();\n        data.append(\"image\", file);\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n            const response = JSON.parse(xhr.responseText);\n            resolve(response);\n        });\n        xhr.addEventListener(\"error\", () => {\n            const error = JSON.parse(xhr.responseText);\n            reject(error);\n        });\n    });\n}\n\ninterface Props { }\n\ninterface State {\n    editorState: EditorState;\n    editMode: boolean;\n}\n\nclass EditorContainer extends Component<Props, State> {\n    private editorRef: React.RefObject<Editor>;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            editorState: EditorState.createWithContent(\n                ContentState.createFromText(\"abcde\")\n            ),\n            editMode: true\n        };\n        this.editorRef = React.createRef<Editor>();\n    }\n\n    focus = () => {\n        let editor = this.editorRef.current;\n        if (editor) {\n            editor.focusEditor();\n        }\n    };\n\n    componentDidMount = () => {\n        console.log(\"edit Me\");\n        if (this.state.editMode) {\n            this.focus();\n        }\n    };\n\n    toggleEditMode = () => {\n        this.setState({ editMode: !this.state.editMode });\n    };\n\n    onEditorStateChange = (editorState: EditorState) => {\n        // console.log(editorState)\n        this.setState({\n            editorState\n        });\n    };\n\n    render() {\n        const { editorState, editMode } = this.state;\n        return (\n            <div className=\"editor\">\n                <button onClick={this.toggleEditMode}>Toggle Edit Mode</button>\n                <Editor\n                    editorState={editorState}\n                    onEditorStateChange={this.onEditorStateChange}\n                    ref={this.editorRef}\n                    readOnly={!editMode}\n                    // toolbarHidden={true}\n                    toolbar={{\n                        // inline: { inDropdown: true },\n                        // list: { inDropdown: true },\n                        // textAlign: { inDropdown: true },\n                        // link: { inDropdown: true },\n                        // history: { inDropdown: true },\n                        image: {\n                            uploadCallback: uploadImageCallBack,\n                            alt: { present: true, mandatory: true }\n                        }\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nconst App = () => (\n    <div>\n        <h2>Test with React Draft Wysiwyg.</h2>\n        <EditorContainer />\n    </div>\n);\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}