{"ast":null,"code":"var _jsxFileName = \"/home/sathish/my-app-typescript/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\nconst EditorContainer = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createWithContent(ContentState.createFromText(\"abcde\")));\n  const [editMode, setEditMode] = useState(true);\n  const editorRef = useRef(null);\n  const focus = () => {\n    if (editorRef.current) {\n      editorRef.current.focusEditor();\n    }\n  };\n  useEffect(() => {\n    console.log(\"edit Me\");\n    if (editMode) {\n      focus();\n    }\n  }, [editMode]);\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n  const onEditorStateChange = newEditorState => {\n    setEditorState(newEditorState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEditMode,\n      children: \"Toggle Edit Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onEditorStateChange: onEditorStateChange,\n      ref: editorRef,\n      readOnly: editMode,\n      toolbar: {\n        image: {\n          uploadCallback: uploadImageCallBack,\n          alt: {\n            present: true,\n            mandatory: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(EditorContainer, \"28RFlXqAXvdLOEhJtyWTR7RJaZI=\");\n_c = EditorContainer;\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Test with React Draft Wysiwyg.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(EditorContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n_c2 = App;\nexport default App;\n\n// import React, { Component } from \"react\";\n// import { render } from \"react-dom\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// // examples in https://github.com/jpuri/react-draft-wysiwyg/tree/master/stories\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface Props {}\n\n// interface State {\n//   editorState: EditorState;\n//   editMode: boolean;\n// }\n\n// class EditorContainer extends Component<Props, State> {\n//   private editorRef: React.RefObject<Editor>;\n//   constructor(props: any) {\n//     super(props);\n//     this.state = {\n//       editorState: EditorState.createWithContent(\n//         ContentState.createFromText(\"abcde\")\n//       ),\n//       editMode: true\n//     };\n//     this.editorRef = React.createRef<Editor>();\n//   }\n\n//   focus = () => {\n//     let editor = this.editorRef.current;\n//     if (editor) {\n//       editor.focusEditor();\n//     }\n//   };\n\n//   componentDidMount = () => {\n//     console.log(\"edit Me\");\n//     if (this.state.editMode) {\n//       this.focus();\n//     }\n//   };\n\n//   toggleEditMode = () => {\n//     this.setState({ editMode: !this.state.editMode });\n//   };\n\n//   onEditorStateChange = (editorState: EditorState) => {\n//     // console.log(editorState)\n//     this.setState({\n//       editorState\n//     });\n//   };\n\n//   render() {\n//     const { editorState, editMode } = this.state;\n//     return (\n//       <div className=\"editor\">\n//         <button onClick={this.toggleEditMode}>Toggle Edit Mode</button>\n//         <Editor\n//           editorState={editorState}\n//           onEditorStateChange={this.onEditorStateChange}\n//           ref={this.editorRef}\n//           readOnly={!editMode}\n//           // toolbarHidden={true}\n//           toolbar={{\n//             // inline: { inDropdown: true },\n//             // list: { inDropdown: true },\n//             // textAlign: { inDropdown: true },\n//             // link: { inDropdown: true },\n//             // history: { inDropdown: true },\n//             image: {\n//               uploadCallback: uploadImageCallBack,\n//               alt: { present: true, mandatory: true }\n//             }\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const App = () => (\n//   <div>\n//     <h2>Test with React Draft Wysiwyg.</h2>\n//     <EditorContainer />\n//   </div>\n// );\n\n// export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditorContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","EditorState","ContentState","Editor","jsxDEV","_jsxDEV","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","EditorContainer","_s","editorState","setEditorState","createWithContent","createFromText","editMode","setEditMode","editorRef","focus","current","focusEditor","console","log","toggleEditMode","onEditorStateChange","newEditorState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","readOnly","toolbar","image","uploadCallback","alt","present","mandatory","_c","App","_c2","$RefreshReg$"],"sources":["/home/sathish/my-app-typescript/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nfunction uploadImageCallBack(file: File) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\ninterface EditorContainerProps {}\n\nconst EditorContainer: React.FC<EditorContainerProps> = () => {\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(ContentState.createFromText(\"abcde\"))\n  );\n  const [editMode, setEditMode] = useState(true);\n  const editorRef = useRef<Editor>(null);\n\n  const focus = () => {\n    if (editorRef.current) {\n      editorRef.current.focusEditor();\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"edit Me\");\n    if (editMode) {\n      focus();\n    }\n  }, [editMode]);\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n\n  const onEditorStateChange = (newEditorState: EditorState) => {\n    setEditorState(newEditorState);\n  };\n\n  return (\n    <div className=\"editor\">\n      <button onClick={toggleEditMode}>Toggle Edit Mode</button>\n      <Editor\n        editorState={editorState}\n        onEditorStateChange={onEditorStateChange}\n        ref={editorRef}\n        readOnly={editMode}\n        toolbar={{\n          image: {\n            uploadCallback: uploadImageCallBack,\n            alt: { present: true, mandatory: true }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nconst App: React.FC = () => (\n  <div>\n    <h2>Test with React Draft Wysiwyg.</h2>\n    <EditorContainer />\n  </div>\n);\n\nexport default App;\n\n\n// import React, { Component } from \"react\";\n// import { render } from \"react-dom\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// // examples in https://github.com/jpuri/react-draft-wysiwyg/tree/master/stories\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface Props {}\n\n// interface State {\n//   editorState: EditorState;\n//   editMode: boolean;\n// }\n\n// class EditorContainer extends Component<Props, State> {\n//   private editorRef: React.RefObject<Editor>;\n//   constructor(props: any) {\n//     super(props);\n//     this.state = {\n//       editorState: EditorState.createWithContent(\n//         ContentState.createFromText(\"abcde\")\n//       ),\n//       editMode: true\n//     };\n//     this.editorRef = React.createRef<Editor>();\n//   }\n\n//   focus = () => {\n//     let editor = this.editorRef.current;\n//     if (editor) {\n//       editor.focusEditor();\n//     }\n//   };\n\n//   componentDidMount = () => {\n//     console.log(\"edit Me\");\n//     if (this.state.editMode) {\n//       this.focus();\n//     }\n//   };\n\n//   toggleEditMode = () => {\n//     this.setState({ editMode: !this.state.editMode });\n//   };\n\n//   onEditorStateChange = (editorState: EditorState) => {\n//     // console.log(editorState)\n//     this.setState({\n//       editorState\n//     });\n//   };\n\n//   render() {\n//     const { editorState, editMode } = this.state;\n//     return (\n//       <div className=\"editor\">\n//         <button onClick={this.toggleEditMode}>Toggle Edit Mode</button>\n//         <Editor\n//           editorState={editorState}\n//           onEditorStateChange={this.onEditorStateChange}\n//           ref={this.editorRef}\n//           readOnly={!editMode}\n//           // toolbarHidden={true}\n//           toolbar={{\n//             // inline: { inDropdown: true },\n//             // list: { inDropdown: true },\n//             // textAlign: { inDropdown: true },\n//             // link: { inDropdown: true },\n//             // history: { inDropdown: true },\n//             image: {\n//               uploadCallback: uploadImageCallBack,\n//               alt: { present: true, mandatory: true }\n//             }\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const App = () => (\n//   <div>\n//     <h2>Test with React Draft Wysiwyg.</h2>\n//     <EditorContainer />\n//   </div>\n// );\n\n// export default App;"],"mappings":"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A,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChB,CACN;AAACW,GAAA,GALID,GAAa;AAOnB,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}