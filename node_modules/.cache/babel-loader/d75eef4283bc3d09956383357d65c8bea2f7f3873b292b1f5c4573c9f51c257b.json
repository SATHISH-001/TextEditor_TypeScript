{"ast":null,"code":"var _jsxFileName = \"/home/sathish/my-app-typescript/src/App.tsx\";\n// import React, { useEffect, useRef, useState } from \"react\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport MyEditor from \"./MyEditor\";\n\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface EditorContainerProps {}\n\n// const EditorContainer: React.FC<EditorContainerProps> = () => {\n//   const [editorState, setEditorState] = useState(\n//     EditorState.createWithContent(ContentState.createFromText(\"abcde\"))\n//   );\n//   const [editMode, setEditMode] = useState(true);\n//   const editorRef = useRef<Editor>(null);\n\n//   const focus = () => {\n//     if (editorRef.current) {\n//       editorRef.current.focusEditor();\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(\"edit Me\");\n//     if (editMode) {\n//       focus();\n//     }\n//   }, [editMode]);\n\n//   const toggleEditMode = () => {\n//     setEditMode(editMode);\n//   };\n\n//   const onEditorStateChange = (newEditorState: EditorState) => {\n//     setEditorState(newEditorState);\n//   };\n\n//   return (\n//     <div className=\"editor\">\n//       <button onClick={toggleEditMode}>Toggle Edit Mode</button>\n//       <Editor\n//         editorState={editorState}\n//         onEditorStateChange={onEditorStateChange}\n//         ref={editorRef}\n//         readOnly={editMode}\n//         toolbar={{\n//           image: {\n//             uploadCallback: uploadImageCallBack,\n//             alt: { present: true, mandatory: true }\n//           }\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const App: React.FC = () => (\n//     <div>\n//         <h2>Test with React Draft Wysiwyg.</h2>\n//         {/* <EditorContainer /> */}\n//         <MyEditor />\n//     </div>\n// );\n\n// export default App;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MyEditor","React","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sathish/my-app-typescript/src/App.tsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\n// import { EditorState, ContentState } from \"draft-js\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport MyEditor from \"./MyEditor\";\n\n// function uploadImageCallBack(file: File) {\n//   return new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n//     xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n//     const data = new FormData();\n//     data.append(\"image\", file);\n//     xhr.send(data);\n//     xhr.addEventListener(\"load\", () => {\n//       const response = JSON.parse(xhr.responseText);\n//       resolve(response);\n//     });\n//     xhr.addEventListener(\"error\", () => {\n//       const error = JSON.parse(xhr.responseText);\n//       reject(error);\n//     });\n//   });\n// }\n\n// interface EditorContainerProps {}\n\n// const EditorContainer: React.FC<EditorContainerProps> = () => {\n//   const [editorState, setEditorState] = useState(\n//     EditorState.createWithContent(ContentState.createFromText(\"abcde\"))\n//   );\n//   const [editMode, setEditMode] = useState(true);\n//   const editorRef = useRef<Editor>(null);\n\n//   const focus = () => {\n//     if (editorRef.current) {\n//       editorRef.current.focusEditor();\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(\"edit Me\");\n//     if (editMode) {\n//       focus();\n//     }\n//   }, [editMode]);\n\n//   const toggleEditMode = () => {\n//     setEditMode(editMode);\n//   };\n\n//   const onEditorStateChange = (newEditorState: EditorState) => {\n//     setEditorState(newEditorState);\n//   };\n\n//   return (\n//     <div className=\"editor\">\n//       <button onClick={toggleEditMode}>Toggle Edit Mode</button>\n//       <Editor\n//         editorState={editorState}\n//         onEditorStateChange={onEditorStateChange}\n//         ref={editorRef}\n//         readOnly={editMode}\n//         toolbar={{\n//           image: {\n//             uploadCallback: uploadImageCallBack,\n//             alt: { present: true, mandatory: true }\n//           }\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const App: React.FC = () => (\n//     <div>\n//         <h2>Test with React Draft Wysiwyg.</h2>\n//         {/* <EditorContainer /> */}\n//         <MyEditor />\n//     </div>\n// );\n\n// export default App;\n\n\n\n\n\nimport React from 'react'\n\nconst App = () => {\n    return (\n        <div>\n            <MyEditor />\n        </div>\n    )\n}\n\nexport default App\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,oBACID,OAAA;IAAAE,QAAA,eACIF,OAAA,CAACH,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAAC,EAAA,GANKN,GAAG;AAQT,eAAeA,GAAG;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}